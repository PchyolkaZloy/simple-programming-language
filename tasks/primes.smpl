func int[] sieveOfEratosthenes(int n) {
    bool[] isPrime = { };
    int i = 0;

    while (i <= n) {
        isPrime[i] = true;
        i = i + 1;
    }

    isPrime[0] = false;
    isPrime[1] = false;

    int p = 2;
    while (p * p <= n) {
        if (isPrime[p]) {
            int i = p * p;

            while (i <= n) {
                isPrime[i] = false;
                i = i + p;
            }
        }
        p = p + 1;
    }

    int[] primes = { };
    int count = 0;
    i = 2;

    while (i <= n) {
        if (isPrime[i]) {
            primes[count] = i;
            count = count + 1;
        }
        i = i + 1;
    }

    return primes;
}

func void printArray(int[] arr, int size) {
    int i = 0;
    while (i < size) {
        print(arr[i]);
        i = i + 1;
    }
}

int n = 100000;
int[] primes = sieveOfEratosthenes(n);

printArray(primes, primes.length);