func int partition(int[] a, int start, int end){
    int pivot = a[end];
    int pIndex = start;

    int i = start;
    while (i < end) {
        if (a[i] <= pivot) {
            int tmp = a[i];
            a[i] = a[pIndex];
            a[pIndex] = tmp;
            pIndex = pIndex + 1;
        }
        i = i + 1;
    }

    int tmp = a[pIndex];
    a[pIndex] = a[end];
    a[end] = tmp;

    return pIndex;
}


func void iterativeQuicksort(int[] a, int n){
    int[] s1;
    int[] s2;
 
    int start = 0;
    int end = n - 1;
 
    append(s1, start);
    append(s2, end);
 
    while (len(s1) != 0) {
        start = pop(s1);
        end = pop(s2);
 
        int pivot = partition(a, start, end);
 
        if ((pivot - 1) > start) {
            append(s1, start);
            append(s2, pivot - 1);
        }
 
        if ((pivot + 1) < end) {
            append(s1, pivot + 1);
            append(s2, end);
        }
    }
}

int[] arr;
int i = 0;
while (i < 300000) {
    append(arr, randint(0, 10000));
    i = i + 1;
}

// print(arr);
// print('\n');
// print('\n');

iterativeQuicksort(arr, len(arr));

// print(arr);

int i = 1;
while (i < len(arr)) {
    if (arr[i - 1] > arr[i]) {
        print('e');
    }
    i = i + 1;
}

