func int partition(int[] arr, int l, int h) {
    int x = arr[h];
    int i = l - 1;

    int j = l;
    while (j <= (h - 1)) {
        if (arr[j] <= x) {
            i = i + 1;
            int tmp = arr[i];
            arr[i] = arr[j];
            arr[j] = tmp;
        }
        j = j + 1;
    }
    int tmp = arr[i + 1];
    arr[i + 1] = arr[h];
    arr[h] = tmp;
    return i + 1;
}

func void quickSort(int[] A, int l, int h) {
    if (l < h) {
        int p = partition(A, l, h);
        quickSort(A, l, p - 1);
        quickSort(A, p + 1, h);
    }
}

int[] arr;
int i = 0;
while (i < 300000) {
    append(arr, randint(0, 10000));
    i = i + 1;
}

// print(arr);
// print('\n');
// print('\n');

quickSort(arr, 0, len(arr) - 1);

// print(arr);

// int i = 1;
// while (i < len(arr)) {
//     if (arr[i - 1] > arr[i]) {
//         print('e');
//     }
//     i = i + 1;
// }
